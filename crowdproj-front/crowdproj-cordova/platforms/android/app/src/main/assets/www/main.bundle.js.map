{"version":3,"sources":["/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/$_lazy_route_resource lazy","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/app.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/app.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/app.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/app.module.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/app.routing.module.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/config.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/error/error.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/error/error.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/error/error.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/dashboard/db.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/dashboard/db.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/dashboard/db.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/detail/detail.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/detail/detail.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/detail/detail.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/heroes.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/heroes.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/heroes.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/list/list.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/list/list.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/list/list.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/search/search.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/search/search.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/search/search.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/update/create.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/update/update.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/update/update.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/update/update.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/view/view.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/view/view.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/view/view.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/home.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/home.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/home.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/detail/detail.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/detail/detail.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/detail/detail.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/dialog/dialog.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/dialog/dialog.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/dialog/dialog.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/icon/icon.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/icon/icon.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/icon/icon.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/list/list.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/list/list.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/list/list.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/message.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/message.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/message.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/models/hero.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/models/message.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/models/mock-errors.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/models/login.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/models/signup.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/models/user.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/profile/profile.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/profile/profile.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/profile/profile.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/services/auth-guard.service.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/services/auth.service.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/services/ws.service.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signin/signin.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signin/signin.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signin/signin.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signout/signout.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signout/signout.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signout/signout.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signup/signup.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signup/signup.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signup/signup.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/user.component.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/user.component.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/user.component.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/user.module.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/user.routing.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/services/hero.service.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/services/message.service.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/services/template.service.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/services/title.service.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/templates/desktop/desktop.template.css","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/templates/desktop/desktop.template.html","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/templates/desktop/desktop.template.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/templates/template.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/environments/environment.ts","/var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/main.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncatched exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"../../../../../src/$$_lazy_route_resource lazy recursive\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/$$_lazy_route_resource lazy\n// module id = ../../../../../src/$$_lazy_route_resource lazy recursive\n// module chunks = main","exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"h1 {\\n  font-size: 1.2em;\\n  color: #999;\\n  margin-bottom: 0;\\n}\\nh2 {\\n  font-size: 2em;\\n  margin-top: 0;\\n  padding-top: 0;\\n}\\n\\n.footer-toolbar,\\n.header-toolbar {\\n    position: fixed;\\n    z-index: 999;\\n}\\n\\n.portrait .header-toolbar {\\n    width: 100%;\\n    height: 56px;\\n    top: 0px;\\n    left: 0px;\\n    right: 0px;\\n}\\n.portrait .footer-toolbar {\\n    width: 100%;\\n    height: 56px;\\n    bottom: 0px;\\n    left: 0px;\\n    right: 0px;\\n}\\n.portrait .app-content {\\n    width: 100%;\\n    padding-top: 56px;\\n    padding-bottom: 56px;\\n}\\n\\n.portrait .app-sidenav {\\n    top: 56px;\\n    bottom: 56px;\\n    left: 0;\\n    height: calc(100% - 112px);\\n}\\n\\n.landscape .header-toolbar {\\n    height: 100%;\\n    width: 56px;\\n    top: 0px;\\n    bottom: 0px;\\n    left: 0px;\\n}\\n.landscape .footer-toolbar {\\n    height: 100%;\\n    width: 56px;\\n    top: 0px;\\n    bottom: 0px;\\n    right: 0px;\\n}\\n.landscape .app-content {\\n    width: calc(100% - 128px);\\n    overflow: hidden;\\n    padding-left: 56px;\\n    padding-right: 56px;\\n}\\n\\n.landscape .header-toolbar >>> .mat-toolbar-row,\\n.landscape .footer-toolbar >>> .mat-toolbar-row {\\n    -webkit-box-orient: vertical !important;\\n    -webkit-box-direction: normal !important;\\n        -ms-flex-direction: column !important;\\n            flex-direction: column !important;\\n}\\n\\n.landscape .rotatable {\\n    -webkit-transform: rotate(-90deg) translateX(-50%);\\n            transform: rotate(-90deg) translateX(-50%);\\n//    transform: rotate(180deg);\\n//    writing-mode: vertical-rl;\\n//    width: auto;\\n//    max-width: 56px;\\n//    height: auto;\\n}\\n\\n.landscape .app-sidenav {\\n    left: 56px;\\n    height: 100%;\\n}\\n\\n.landscape .title {\\n    min-height: 120px;\\n    max-height: 300px;\\n    text-align: right;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/app.component.css\n// module id = ../../../../../src/app/app.component.css\n// module chunks = main","module.exports = \"<!--app-mobile-landscape *ngIf=\\\"template == 'mobile-landscape'\\\">\\n    <router-outlet></router-outlet>\\n</app-mobile-landscape>\\n<app-mobile-portrait *ngIf=\\\"template == 'mobile-portrait'\\\">\\n    <router-outlet></router-outlet>\\n</app-mobile-portrait-->\\n<app-desktop *ngIf=\\\"template == 'desktop'\\\">\\n    <router-outlet></router-outlet>\\n</app-desktop>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/app.component.html\n// module id = ../../../../../src/app/app.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { OnInit, OnDestroy }    from '@angular/core';\nimport { Router, ActivatedRoute, ActivatedRouteSnapshot, UrlSegment} from '@angular/router';\nimport { Location } from '@angular/common';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Config } from './config';\nimport { AuthService } from './modules/user/services/auth.service';\nimport { TemplateService } from './services/template.service';\nimport { TitleService } from './services/title.service';\nimport { MessageIconComponent } from './home/message/icon/icon.component';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\n\nexport class AppComponent implements OnInit, OnDestroy {\n    template: string;\n    showBack: boolean = true;\n    isHome: boolean = true;\n    title: string = '';\n    titleSub: Subscription;\n    routerSub: Subscription;\n    breadcrumbs: {\n        name: string;\n        url: string\n    }[] = [];\n\n    public constructor(\n        public authService: AuthService,\n        public templateService: TemplateService,\n        private titleService: TitleService,\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private location: Location\n    ) {}\n\n    ngOnInit() {\n        this.templateService.getTemplate().subscribe(template => {this.template = template});\n        this.authService.check().subscribe(() => {\n            if (this.authService.isLoggedIn && this.authService.redirectUrl) {\n                this.router.navigate([this.authService.redirectUrl]);\n            }\n        });\n        this.titleSub = this.titleService.getTitle().subscribe(title => {\n            if(title == '' || title == null) {\n                this.title = Config.APP_NAME;\n            } else {\n                this.title = title;\n            }\n        });\n        this.routerSub = this.router.events.subscribe(event => {\n            this.breadcrumbs = [];\n            this.parseRoute(this.router.routerState.snapshot.root);\n        });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to ensure no memory leaks\n        this.titleSub.unsubscribe();\n        this.routerSub.unsubscribe();\n    }\n\n    parseRoute(node: ActivatedRouteSnapshot) {\n        this.showBack = node.data['noBack'] !== true;\n        if (node.data['breadcrumb']) {\n            let urlSegments: UrlSegment[] = [];\n            node.pathFromRoot.forEach(routerState => {\n                urlSegments = urlSegments.concat(routerState.url);\n            });\n            let url = urlSegments.map(urlSegment => {\n                return urlSegment.path;\n            }).join('/');\n            this.breadcrumbs.push({\n                name: node.data['breadcrumb'],\n                url: '/' + url\n            })\n        }\n        if (node.firstChild) {\n            this.parseRoute(node.firstChild);\n        }\n    }\n\n    goBack(): void {\n      this.location.back();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/app.component.ts","import { BrowserModule, Title } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { TemplateService } from './services/template.service';\nimport { MessageService } from './services/message.service';\nimport { TitleService } from './services/title.service';\nimport { HeroService } from './services/hero.service';\n\nimport { AppComponent } from './app.component';\nimport { ErrorComponent } from './error/error.component';\nimport { DesktopTemplate } from './templates/desktop/desktop.template';\n\nimport { HomeComponent } from './home/home.component';\nimport { DashboardComponent } from './home/dashboard/db.component';\n\nimport { HeroesComponent } from './home/heroes/heroes.component';\nimport { HeroesListComponent } from './home/heroes/list/list.component';\nimport { HeroesDetailComponent} from './home/heroes/detail/detail.component';\nimport { HeroesViewComponent}   from './home/heroes/view/view.component';\nimport { HeroesCreateComponent} from './home/heroes/update/create.component';\nimport { HeroesUpdateComponent} from './home/heroes/update/update.component';\nimport { HeroesSearchComponent } from './home/heroes/search/search.component';\n\nimport { MessageComponent }       from './home/message/message.component';\nimport { MessageListComponent }   from './home/message/list/list.component';\nimport { MessageDetailComponent } from './home/message/detail/detail.component';\nimport { MessageIconComponent }   from './home/message/icon/icon.component';\nimport { MessageDialogComponent } from './home/message/dialog/dialog.component';\n\nimport { UserModule } from './modules/user/user.module';\n\nimport {NgbModule} from '@ng-bootstrap/ng-bootstrap';\n\nimport { AppRoutingModule }   from './app.routing.module';\n\n@NgModule({\n    declarations: [\n        DesktopTemplate,\n\n        ErrorComponent,\n        HomeComponent,\n        DashboardComponent,\n\n        HeroesComponent,\n        HeroesListComponent,\n        HeroesDetailComponent,\n        HeroesViewComponent,\n        HeroesCreateComponent,\n        HeroesUpdateComponent,\n        HeroesSearchComponent,\n\n        MessageComponent,\n        MessageListComponent,\n        MessageDialogComponent,\n        MessageIconComponent,\n        MessageDetailComponent,\n\n        AppComponent\n    ],\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n        FormsModule,\n        HttpModule,\n        JsonpModule,\n        UserModule,\n        AppRoutingModule,\n\n        NgbModule.forRoot()\n    ],\n    providers: [\n        Title,\n        Location,\n        {provide: LocationStrategy, useClass: PathLocationStrategy},\n        TemplateService,\n        MessageService,\n        HeroService,\n        TitleService\n    ],\n    entryComponents: [MessageDialogComponent],\n    bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/app.module.ts","import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard }             from './modules/user/services/auth-guard.service';\n\nimport { ErrorComponent }       from './error/error.component';\nimport { HomeComponent }        from './home/home.component';\nimport { DashboardComponent }   from './home/dashboard/db.component';\n\nimport { HeroesComponent }      from './home/heroes/heroes.component';\nimport { HeroesListComponent }  from './home/heroes/list/list.component';\nimport { HeroesDetailComponent} from './home/heroes/detail/detail.component';\nimport { HeroesViewComponent}   from './home/heroes/view/view.component';\nimport { HeroesCreateComponent} from './home/heroes/update/create.component';\nimport { HeroesUpdateComponent} from './home/heroes/update/update.component';\nimport { HeroesSearchComponent} from './home/heroes/search/search.component';\n\nimport { MessageComponent }      from './home/message/message.component';\nimport { MessageListComponent }  from './home/message/list/list.component';\nimport { MessageDetailComponent} from './home/message/detail/detail.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent,\n        canActivate: [AuthGuard],\n        runGuardsAndResolvers: 'always',\n        data: {breadcrumb: 'Главная'},\n        children: [\n            {\n                path: '',\n                component: DashboardComponent,\n                data: {breadcrumb: false, noBack: true},\n                pathMatch: 'full'\n            },\n            {\n                path: 'heroes',\n                component: HeroesComponent,\n                data: {breadcrumb: 'Heroes'},\n                children: [\n                    {\n                        path: '',\n                        component: HeroesListComponent,\n                        data: {breadcrumb: false},\n                        pathMatch: 'full'\n                    },\n                    {\n                        path: 'create',\n                        component: HeroesCreateComponent,\n                        data: {breadcrumb: 'Create'},\n                    },\n                    {\n                        path: ':id',\n                        component: HeroesDetailComponent,\n                        data: {breadcrumb: 'Detail'},\n                        children: [\n                            {\n                                path: '',\n                                component: HeroesViewComponent,\n                                data: {breadcrumb: false},\n                                pathMatch: 'full'\n                            },\n                            {\n                                path: 'update',\n                                component: HeroesUpdateComponent,\n                                data: {breadcrumb: 'Update'},\n                            }\n                        ]\n                    }\n                ]\n            },\n            {\n                path: 'message',\n                component: MessageComponent,\n                data: { breadcrumb: 'Сообщения' },\n                children: [\n                    {\n                        path: '',\n                        component: MessageListComponent,\n                        data: {breadcrumb: false},\n                        pathMatch: 'full'\n                    },\n                    {\n                        path: ':id',\n                        data: {breadcrumb: 'Message'},\n                        component: MessageDetailComponent\n                    }\n                ]\n            },\n            {\n                path: '**',\n                component: ErrorComponent,\n                data: {code: 404, breadcrumb: 'Ошибка'}\n            }\n        ]\n    }\n];\n\n@NgModule({\n  imports: [ RouterModule.forRoot(routes) ],\n  exports: [ RouterModule ]\n})\n\nexport class AppRoutingModule {}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/app.routing.module.ts","export class Config {\n    public static APP_NAME = 'CrowdProj';\n//    public static REST_ADDR = 'http://crowdproj.com';\n    public static REST_ADDR = '..';\n    public static REST_HERO = Config.REST_ADDR + '/api-heroes';\n    public static REST_LOGIN = Config.REST_ADDR + '/api-user';\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/config.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/error/error.component.css\n// module id = ../../../../../src/app/error/error.component.css\n// module chunks = main","module.exports = \"<h1>\\n  {{title}}\\n</h1>\\n\\n<p>{{error.code}}: {{error.message}}</p>\\n\\n<div>\\n{{error.description}}\\n</div>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/error/error.component.html\n// module id = ../../../../../src/app/error/error.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { OnInit } from '@angular/core';\nimport { Error } from '../models/error';\nimport { ERRORS } from '../models/mock-errors';\nimport { TitleService } from '../services/title.service';\n\n@Component({\n  selector: 'app-error',\n  templateUrl: './error.component.html',\n  styleUrls: ['./error.component.css']\n})\n\n\n\nexport class ErrorComponent implements OnInit {\n    title = 'Error';\n    error: Error;\n\n    constructor(\n        private route: ActivatedRoute,\n        private titleService: TitleService\n    ) {}\n\n    ngOnInit(): void {\n        let code = this.route.snapshot.data['code'];\n        this.error = ERRORS.find(error => error.code === code);\n        this.titleService.setTitle('Error: '.concat(code.toString()));\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/error/error.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"[class*='col-'] {\\n//  float: left;\\n  padding-right: 10px;\\n  padding-bottom: 10px;\\n}\\n\\n/*\\n[class*='col-']:last-of-type {\\n  padding-right: 5px;\\n}\\n*/\\n\\na {\\n  text-decoration: none;\\n}\\n\\n*, *:after, *:before {\\n  box-sizing: border-box;\\n}\\n\\nh3 {\\n    text-align: center;\\n    margin-bottom: 0;\\n}\\n\\nh4 {\\n    position: relative;\\n}\\n\\n.grid {\\n    margin: 0;\\n}\\n\\n.col-1-4 {\\n    width: 25%;\\n    min-height: 60px;\\n    min-width: 200px;\\n    display: inline-block;\\n    position: relative;\\n}\\n\\n.module {\\n    position: absolute;\\n    text-align: center;\\n    color: #eee;\\n//    min-height: 60px;\\n//    max-height: 120px;\\n//    min-width: 190px;\\n    left: 0px;\\n    right: 0px;\\n    top: 0px;\\n    bottom: 0px;\\n//    width: 100%;\\n//    height: 100%;\\n    background-color: #607D8B;\\n    border-radius: 2px;\\n}\\n\\n.module:hover {\\n    background-color: #EEE;\\n    cursor: pointer;\\n    color: #607d8b;\\n}\\n\\n.grid-pad {\\n    padding: 5px 0;\\n}\\n.grid-pad > [class*='col-']:last-of-type {\\n    padding-right: 5px;\\n}\\n\\n/*\\n@media (max-width: 600px) {\\n    .module {\\n//    font-size: 10px;\\n//        max-height: 75px;\\n        padding: 5px;\\n    }\\n}\\n@media (max-width: 1024px) {\\n    .grid {\\n        margin: 0;\\n    }\\n    .module {\\n        min-width: 60px;\\n        padding: 20px;\\n    }\\n\\n    .grid-pad {\\n        padding: 10px 0;\\n    }\\n    .grid-pad > [class*='col-']:last-of-type {\\n        padding-right: 20px;\\n    }\\n}\\n*/\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/dashboard/db.component.css\n// module id = ../../../../../src/app/home/dashboard/db.component.css\n// module chunks = main","module.exports = \"<h1 i18n>Tour of Heroes</h1>\\n\\n<div class=\\\"grid grid-pad\\\">\\n  <a *ngFor=\\\"let hero of heroes\\\"  [routerLink]=\\\"['/heroes', hero.id]\\\"  class=\\\"col-1-4\\\">\\n    <div class=\\\"module hero\\\">\\n      <h4>{{hero.name}}</h4>\\n    </div>\\n  </a>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/dashboard/db.component.html\n// module id = ../../../../../src/app/home/dashboard/db.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Hero } from '../../models/hero';\nimport { HeroService } from '../../services/hero.service';\nimport { TitleService } from '../../services/title.service';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './db.component.html',\n  styleUrls: ['./db.component.css']\n})\n\nexport class DashboardComponent implements OnInit {\n    errorMessage: string = null;\n    heroes: Hero[] = [];\n    constructor(\n        private heroService: HeroService,\n        private titleService: TitleService\n    ) {\n        this.titleService.setTitle('');\n    }\n  ngOnInit(): void {\n    this.getHeroes();\n  }\n\n  getHeroes() {\n    this.heroService\n        .getHeroes()\n        .subscribe(\n          heroes => this.heroes = heroes.slice(1, 5),\n          error =>  this.errorMessage = <any>error\n        );\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/dashboard/db.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/detail/detail.component.css\n// module id = ../../../../../src/app/home/heroes/detail/detail.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/detail/detail.component.html\n// module id = ../../../../../src/app/home/heroes/detail/detail.component.html\n// module chunks = main","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { HeroService } from '../../../services/hero.service';\n\nimport { Hero } from '../../../models/hero';\n\n@Component({\n  selector: 'app-heroes-detail',\n  templateUrl: './detail.component.html',\n  styleUrls: ['./detail.component.css']\n})\n\nexport class HeroesDetailComponent implements OnInit, OnDestroy {\n\n    constructor(\n      private heroService: HeroService,\n      private route: ActivatedRoute,\n    ) {}\n\n    ngOnInit(): void {\n/*\n        this.routeSub = this.route.params\n            .switchMap((params: Params) => this.heroService.getHero(+params['id']))\n            .subscribe(hero => {\n                this.hero = hero;\n            });\n*/\n    }\n\n    ngOnDestroy(): void {\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/detail/detail.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/heroes.component.css\n// module id = ../../../../../src/app/home/heroes/heroes.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/heroes.component.html\n// module id = ../../../../../src/app/home/heroes/heroes.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Hero } from '../../models/hero';\nimport { HeroService } from '../../services/hero.service';\nimport { TitleService } from '../../services/title.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-heroes',\n  templateUrl: './heroes.component.html',\n  styleUrls: ['./heroes.component.css']\n})\n\nexport class HeroesComponent {}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/heroes.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".selected {\\n  background-color: #CFD8DC !important;\\n  color: white;\\n}\\n.heroes {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 15em;\\n}\\n.heroes li {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n}\\n.heroes li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.heroes li.selected:hover {\\n  background-color: #BBD8DC !important;\\n  color: white;\\n}\\n.heroes .text {\\n  position: relative;\\n  top: -3px;\\n}\\n.heroes .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\nbutton {\\n  font-family: Arial;\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  cursor: hand;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\n\\nbutton.delete {\\n  float:right;\\n  margin-top: 2px;\\n  margin-right: .8em;\\n  background-color: gray !important;\\n  color:white;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/list/list.component.css\n// module id = ../../../../../src/app/home/heroes/list/list.component.css\n// module chunks = main","module.exports = \"<h2>My Heroes</h2>\\n<ul class=\\\"heroes\\\" *ngIf=\\\"heroes\\\">\\n    <li *ngFor=\\\"let hero of heroes\\\">\\n        <span class=\\\"badge\\\">{{hero.id}}</span>\\n        <a routerLink=\\\"./{{hero.id}}\\\">{{hero.name}}</a>\\n        <button class=\\\"delete\\\" (click)=\\\"delete(hero); $event.stopPropagation()\\\">x</button>\\n    </li>\\n</ul>\\n\\n<a routerLink=\\\"./create\\\" class=\\\"btn\\\">Add a hero</a>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/list/list.component.html\n// module id = ../../../../../src/app/home/heroes/list/list.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Hero } from '../../../models/hero';\nimport { HeroService } from '../../../services/hero.service';\nimport { TitleService } from '../../../services/title.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-heroes-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\n\nexport class HeroesListComponent implements OnInit {\n  heroes: Hero[];\n  selectedHero: Hero;\n  errorMessage: string;\n\n    constructor(\n        private router: Router,\n        private heroService: HeroService,\n        private titleService: TitleService\n    ) {}\n\n    ngOnInit(): void {\n        this.titleService.setTitle('List of Heroes');\n        this.getHeroes();\n    }\n\n    getHeroes() {\n        this.heroService\n            .getHeroes()\n            .subscribe(\n                heroes => this.heroes = heroes,\n                error =>  this.errorMessage = <any>error\n            );\n    }\n\n    add(name: string) {\n        let hero = new Hero;\n        hero.name = name;\n        this.heroService\n            .create(hero)\n            .subscribe(\n                hero => {\n                    this.selectedHero = hero;\n                    this.getHeroes();\n//                    this.gotoDetail();\n                },\n                error =>  this.errorMessage = <any>error\n            );\n    }\n\n    delete(hero: Hero): void {\n        this.heroService\n            .delete(hero)\n            .subscribe(\n                result => {\n                    if(result) {\n                        if(this.selectedHero.id === hero.id) {\n                            this.selectedHero = null;\n                        }\n                        this.getHeroes();\n                    }\n                },\n                error =>  this.errorMessage = <any>error\n            );\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/list/list.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".search-result{\\n  border-bottom: 1px solid gray;\\n  border-left: 1px solid gray;\\n  border-right: 1px solid gray;\\n  width:195px;\\n  height: 16px;\\n  padding: 5px;\\n  background-color: white;\\n  cursor: pointer;\\n}\\n.search-result:hover {\\n  color: #eee;\\n  background-color: #607D8B;\\n}\\n#search-box{\\n  width: 200px;\\n  height: 20px;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/search/search.component.css\n// module id = ../../../../../src/app/home/heroes/search/search.component.css\n// module chunks = main","module.exports = \"<div id=\\\"search-component\\\">\\n  <h4>Hero Search</h4>\\n  <input #searchBox id=\\\"search-box\\\" (keyup)=\\\"search(searchBox.value)\\\" />\\n  <div>\\n    <div *ngFor=\\\"let hero of heroes | async\\\"\\n         (click)=\\\"gotoDetail(hero)\\\" class=\\\"search-result\\\" >\\n      {{hero.name}}\\n    </div>\\n  </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/search/search.component.html\n// module id = ../../../../../src/app/home/heroes/search/search.component.html\n// module chunks = main","import { Component, OnInit } from '@angular/core';\nimport { Router }            from '@angular/router';\nimport { Observable }        from 'rxjs/Observable';\nimport { Subject }           from 'rxjs/Subject';\n// Observable class extensions\nimport 'rxjs/add/observable/of';\n// Observable operators\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/debounceTime';\nimport 'rxjs/add/operator/distinctUntilChanged';\nimport { HeroService } from '../../../services/hero.service';\nimport { Hero } from '../../../models/hero';\n\n@Component({\n  selector: 'app-heroes-search',\n  templateUrl: './search.component.html',\n  styleUrls: [ './search.component.css' ],\n  providers: [HeroService]\n})\n\nexport class HeroesSearchComponent implements OnInit {\n  heroes: Observable<Hero[]>;\n  private searchTerms = new Subject<string>();\n  constructor(\n    private heroService: HeroService,\n    private router: Router) {}\n  // Push a search term into the observable stream.\n  search(term: string): void {\n    this.searchTerms.next(term);\n  }\n  ngOnInit(): void {\n    this.heroes = this.searchTerms\n      .debounceTime(300)        // wait 300ms after each keystroke before considering the term\n      .distinctUntilChanged()   // ignore if next search term is same as previous\n      .switchMap(term => term   // switch to new observable each time the term changes\n        // return the http search observable\n        ? this.heroService.search(term)\n        // or the observable of empty heroes if there was no search term\n        : Observable.of<Hero[]>([]))\n      .catch(error => {\n        // TODO: add real error handling\n        return Observable.of<Hero[]>([]);\n      });\n  }\n  gotoDetail(hero: Hero): void {\n    let link = ['/detail', hero.id];\n    this.router.navigate(link);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/search/search.component.ts","// Keep the Input import for now, you'll remove it later:\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { Location }                 from '@angular/common';\nimport { HeroService } from '../../../services/hero.service';\nimport { TitleService } from '../../../services/title.service';\nimport { MessageService } from '../../../services/message.service';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport 'rxjs/add/operator/switchMap';\nimport {FormControl, Validators} from '@angular/forms';\n\nimport { Hero } from '../../../models/hero';\n\n@Component({\n  selector: 'app-heroes-create',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class HeroesCreateComponent implements OnInit, OnDestroy {\n    @Input() hero: Hero = new Hero;\n    @Input() nameFormControl = new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Zа-яА-Я- ]+$/)]);\n    errorMessage: string;\n    routeSub: Subscription;\n\n    constructor(\n      private heroService: HeroService,\n      private titleService: TitleService,\n      private messageService: MessageService,\n      private route: ActivatedRoute,\n      private location: Location\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.titleService.setTitle('Create hero');\n    }\n\n    ngOnDestroy(): void {\n    }\n\n    onSubmit() {\n        this.create();\n    }\n\n    create(): void {\n        this.heroService.create(this.hero).subscribe(\n            result => this.location.back(),\n            error => this.errorMessage = <any>error\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/update/create.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"label {\\n  display: inline-block;\\n  width: 3em;\\n  margin: .5em 0;\\n  color: #607D8B;\\n  font-weight: bold;\\n}\\ninput {\\n  height: 2em;\\n  font-size: 1em;\\n  padding-left: .4em;\\n}\\nbutton {\\n  margin-top: 20px;\\n  font-family: Arial;\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer; cursor: hand;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #ccc; \\n  cursor: auto;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/update/update.component.css\n// module id = ../../../../../src/app/home/heroes/update/update.component.css\n// module chunks = main","module.exports = \"<div class=\\\"container\\\">\\n    <h1>Hero Form</h1>\\n    <form (ngSubmit)=\\\"onSubmit()\\\" #heroForm=\\\"ngForm\\\" *ngIf=\\\"hero\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"signupemail\\\" class=\\\"col-2 col-form-label\\\" i18n>E-mail</label>\\n      <div class=\\\"col-10\\\">\\n        <input\\n            class=\\\"form-control\\\"\\n            placeholder=\\\"Name\\\"\\n            [(ngModel)]=\\\"hero.name\\\"\\n            name=\\\"name\\\"\\n            #heroname=\\\"ngModel\\\"\\n            required\\n            pattern=\\\"^[a-zA-Zа-яА-Я- ]+$\\\"\\n        >\\n        <small *ngIf=\\\"heroname.errors && (heroname.dirty || heroname.touched)\\\" class=\\\"form-text text-muted alert alert-danger\\\">\\n            <div [hidden]=\\\"!heroname.errors.required\\\">Вы должны заполнить это поле</div>\\n            <div [hidden]=\\\"!heroname.errors.pattern\\\">Имя должно содержать только буквы, знаки \\\"-\\\" и пробелы</div>\\n        </small>\\n      </div>\\n    </div>\\n\\n      <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!heroForm.form.valid\\\">Submit</button>\\n\\n    </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/update/update.component.html\n// module id = ../../../../../src/app/home/heroes/update/update.component.html\n// module chunks = main","// Keep the Input import for now, you'll remove it later:\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { Location }                 from '@angular/common';\nimport { HeroService } from '../../../services/hero.service';\nimport { TitleService } from '../../../services/title.service';\nimport { MessageService } from '../../../services/message.service';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport 'rxjs/add/operator/switchMap';\nimport {FormControl, Validators} from '@angular/forms';\n\nimport { Hero } from '../../../models/hero';\n\n@Component({\n  selector: 'app-heroes-update',\n  templateUrl: './update.component.html',\n  styleUrls: ['./update.component.css']\n})\nexport class HeroesUpdateComponent implements OnInit, OnDestroy {\n    @Input() hero: Hero;\n    @Input() nameFormControl = new FormControl('', [Validators.required, Validators.pattern(/^[a-zA-Zа-яА-Я- ]+$/)]);\n    errorMessage: string;\n    routeSub: Subscription;\n\n    constructor(\n        private heroService: HeroService,\n        private titleService: TitleService,\n        private messageService: MessageService,\n        private route: ActivatedRoute,\n        private location: Location\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.titleService.setTitle('Update hero');\n        this.routeSub = this.route.parent.params\n            .switchMap((params: Params) => this.heroService.getHero(+params['id']))\n            .subscribe(hero => {\n                this.hero = hero;\n                this.nameFormControl.setValue(hero.name);\n                this.titleService.setTitle(hero.name);\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.routeSub.unsubscribe();\n//        this.heroSub.unsubscribe();\n    }\n\n    onSubmit() {\n    //    this.submitted = true;\n        this.save();\n    }\n\n    save(): void {\n        this.heroService.update(this.hero).subscribe(\n            result => this.location.back(),\n            error => this.errorMessage = <any>error\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/update/update.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"label {\\n  display: inline-block;\\n  width: 3em;\\n  margin: .5em 0;\\n  color: #607D8B;\\n  font-weight: bold;\\n}\\ninput {\\n  height: 2em;\\n  font-size: 1em;\\n  padding-left: .4em;\\n}\\nbutton {\\n  margin-top: 20px;\\n  font-family: Arial;\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer; cursor: hand;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #ccc; \\n  cursor: auto;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/view/view.component.css\n// module id = ../../../../../src/app/home/heroes/view/view.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"hero\\\">\\n    <h2>{{hero.name}} details!</h2>\\n    <div><label>id: </label>{{hero.id}}</div>\\n    <div>\\n        <label>name: </label>\\n        <span>{{hero.name}}</span>\\n    </div>\\n</div>\\n\\n<a routerLink=\\\"./update\\\" class=\\\"btn\\\">Update</a>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/view/view.component.html\n// module id = ../../../../../src/app/home/heroes/view/view.component.html\n// module chunks = main","// Keep the Input import for now, you'll remove it later:\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { Location }                 from '@angular/common';\nimport { HeroService } from '../../../services/hero.service';\nimport { TitleService } from '../../../services/title.service';\nimport { MessageService } from '../../../services/message.service';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport 'rxjs/add/operator/switchMap';\n\nimport { Hero } from '../../../models/hero';\n\n@Component({\n  selector: 'app-heroes-view',\n  templateUrl: './view.component.html',\n  styleUrls: ['./view.component.css']\n})\nexport class HeroesViewComponent implements OnInit, OnDestroy {\n    @Input() hero: Hero;\n    errorMessage: string;\n    routeSub: Subscription;\n\n    constructor(\n      private heroService: HeroService,\n      private titleService: TitleService,\n      private messageService: MessageService,\n      private route: ActivatedRoute\n    ) {}\n\n    ngOnInit(): void {\n        this.titleService.setTitle('Hero Detail');\n        this.routeSub = this.route.parent.params\n            .switchMap((params: Params) => this.heroService.getHero(+params['id']))\n            .subscribe(hero => {\n                this.hero = hero;\n                this.route.parent.data['breadcrumb'] = hero.name;\n                this.titleService.setTitle(hero.name);\n            });\n    }\n\n    ngOnDestroy(): void {\n        this.routeSub.unsubscribe();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/heroes/view/view.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/home.component.css\n// module id = ../../../../../src/app/home/home.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/home.component.html\n// module id = ../../../../../src/app/home/home.component.html\n// module chunks = main","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\nexport class HomeComponent {}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/home.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"label {\\n  display: inline-block;\\n  width: 3em;\\n  margin: .5em 0;\\n  color: #607D8B;\\n  font-weight: bold;\\n}\\ninput {\\n  height: 2em;\\n  font-size: 1em;\\n  padding-left: .4em;\\n}\\nbutton {\\n  margin-top: 20px;\\n  font-family: Arial;\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer; cursor: hand;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\nbutton:disabled {\\n  background-color: #eee;\\n  color: #ccc; \\n  cursor: auto;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/detail/detail.component.css\n// module id = ../../../../../src/app/home/message/detail/detail.component.css\n// module chunks = main","module.exports = \"<div *ngIf=\\\"message\\\">\\n    <h2>{{message.title}} details!</h2>\\n    <div><label>id: </label>{{message.id}}</div>\\n    <div>\\n        <label>message: </label>\\n        <div>{{message.title}}</div>\\n    </div>\\n    <div>\\n        <label>text: </label>\\n        <div>{{message.text}}</div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/detail/detail.component.html\n// module id = ../../../../../src/app/home/message/detail/detail.component.html\n// module chunks = main","// Keep the Input import for now, you'll remove it later:\nimport { Component, Input, OnInit, OnDestroy } from '@angular/core';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { TitleService } from '../../../services/title.service';\nimport { MessageService } from '../../../services/message.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Router } from '@angular/router';\n\nimport 'rxjs/add/operator/switchMap';\n\nimport { Message } from '../../../models/message';\n\n@Component({\n    selector: 'app-message-detail',\n    templateUrl: './detail.component.html',\n    styleUrls: ['./detail.component.css']\n})\n\nexport class MessageDetailComponent implements OnInit, OnDestroy {\n    @Input() message: Message;\n    routeSub: Subscription;\n\n    constructor(\n        private titleService: TitleService,\n        private messageService: MessageService,\n        private route: ActivatedRoute,\n        private router: Router\n    ) {}\n\n    ngOnInit(): void {\n        this.titleService.setTitle('Message Detail');\n        this.routeSub = this.route.params\n            .subscribe((params: Params) => {\n                let message = this.messageService.getMessage(+params['id']);\n                if(message === null || message === undefined) {\n                    this.router.navigate(['/error',404]);\n                } else {\n                    this.message = message;\n                }\n            });\n\n\n/*\n            .switchMap((params: Params) => this.heroService.getHero(+params['id']))\n            .subscribe(hero => {\n                this.hero = hero;\n                this.titleService.setTitle(hero.name);\n            });\n*/\n    }\n\n    ngOnDestroy(): void {\n        this.routeSub.unsubscribe();\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/detail/detail.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/dialog/dialog.component.css\n// module id = ../../../../../src/app/home/message/dialog/dialog.component.css\n// module chunks = main","module.exports = \"<ng-template #content let-c=\\\"close\\\" let-d=\\\"dismiss\\\">\\n  <div class=\\\"modal-header\\\">\\n    <h4 class=\\\"modal-title\\\" i18n>Messages</h4>\\n    <button type=\\\"button\\\" class=\\\"close\\\" i18n-aria-label aria-label=\\\"Close\\\" (click)=\\\"d('Cross click')\\\">\\n      <span aria-hidden=\\\"true\\\">&times;</span>\\n    </button>\\n  </div>\\n  <div class=\\\"modal-body\\\">\\n\\n    <a routerLink=\\\"/message\\\" i18n=\\\"all messages\\\">All</a>\\n    <ul class=\\\"messages\\\" *ngIf=\\\"messageService.messages\\\">\\n        <li *ngFor=\\\"let message of messageService.messages\\\">\\n            <span class=\\\"badge\\\">{{message.id}}</span>\\n            <a routerLink=\\\"/message/{{message.id}}\\\">{{message.title}}</a>\\n            <button class=\\\"delete\\\" (click)=\\\"delete(message.id); $event.stopPropagation()\\\">x</button>\\n        </li>\\n    </ul>\\n\\n\\n  </div>\\n  <div class=\\\"modal-footer\\\">\\n    <button type=\\\"button\\\" class=\\\"btn btn-secondary\\\" (click)=\\\"c('Close click')\\\" i18n>Close</button>\\n  </div>\\n</ng-template>\\n\\n<!-- button class=\\\"btn btn-lg btn-outline-primary\\\" (click)=\\\"open(content)\\\">Launch demo modal</button -->\\n\\n<!--h2 md-dialog-title>Dialog</h2-->\\n<!-- md-dialog-content (click)=\\\"dialogRef.close()\\\">\\n    <a routerLink=\\\"/message\\\">Все</a>\\n    <ul class=\\\"messages\\\" *ngIf=\\\"messages\\\">\\n        <li *ngFor=\\\"let message of messages\\\">\\n            <span class=\\\"badge\\\">{{message.id}}</span>\\n            <a routerLink=\\\"/message/{{message.id}}\\\">{{message.title}}</a>\\n            <button class=\\\"delete\\\" (click)=\\\"delete(message.id); $event.stopPropagation()\\\">x</button>\\n        </li>\\n    </ul>\\n</md-dialog-content>\\n<md-dialog-actions>\\n    <button md-button md-dialog-close=\\\"Закрыть\\\">Закрыть</button>\\n</md-dialog-actions -->\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/dialog/dialog.component.html\n// module id = ../../../../../src/app/home/message/dialog/dialog.component.html\n// module chunks = main","import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n//import { MdDialog, MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\nimport { Message } from '../../../models/message';\nimport { MessageService } from '../../../services/message.service';\n//import { MessageComponent } from '../message.component';\n\n@Component({\n  selector: 'app-message-dialog',\n  templateUrl: './dialog.component.html',\n  styleUrls: ['./dialog.component.css'],\n})\n\n\nexport class MessageDialogComponent {\n    messages: Message[] = [];\n    constructor(\n//        @Inject(MD_DIALOG_DATA) public data: any,\n//        public dialogRef: MdDialogRef<MessageDialogComponent>\n        private messageService: MessageService,\n        private modalService: NgbModal\n    ) {\n    }\n\n    open(content) {\n        this.modalService.open(content).result.then((result) => {\n            // this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    private getDismissReason(reason: any): string {\n        if (reason === ModalDismissReasons.ESC) {\n            return 'by pressing ESC';\n        } else if (reason === ModalDismissReasons.BACKDROP_CLICK) {\n            return 'by clicking on a backdrop';\n        } else {\n            return    `with: ${reason}`;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/dialog/dialog.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".message-icon {\\n    position: relative;\\n    border-radius: 12%;\\n}\\n\\n.stack {\\n    position: absolute;\\n    width: 100%;\\n    height: 14px;\\n    line-height: 14px;\\n    font-size: 10px;\\n    left: 0;\\n    top: 4px;\\n}\\n\\n.error {\\n    background-color: red;\\n    border: solid 1px red;\\n}\\n\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/icon/icon.component.css\n// module id = ../../../../../src/app/home/message/icon/icon.component.css\n// module chunks = main","module.exports = \"<button md-icon-button (click)=\\\"openMessagesDialog(content)\\\" *ngIf=\\\"messageCount > 0\\\">\\n    <!--md-icon class=\\\"md-24 message-icon {{messageClass}}\\\">\\n        chat_bubble_outline\\n        <span class=\\\"stack\\\">{{messageCount}}</span>\\n    </md-icon-->\\n        <span class=\\\"stack\\\">{{messageCount}}</span>\\n</button>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/icon/icon.component.html\n// module id = ../../../../../src/app/home/message/icon/icon.component.html\n// module chunks = main","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Subscription } from 'rxjs/Subscription';\n//import { MdDialog, MdDialogRef } from '@angular/material';\nimport {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\nimport { Message } from '../../../models/message';\nimport { MessageService } from '../../../services/message.service';\nimport { MessageDialogComponent } from '../dialog/dialog.component';\n\n@Component({\n  selector: 'app-message-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.css'],\n})\n\n\nexport class MessageIconComponent implements OnInit , OnDestroy {\n    modalOpen: boolean = false;\n    subscription: Subscription;\n    messageClass: string = '';\n    messageCount: number = 0;\n    messages: Message[] = [];\n\n    constructor(\n        private messageService: MessageService,\n//        public dialog: MdDialog\n        private modalService: NgbModal\n    ) {\n    }\n\n    openMessagesDialog(content) {\n        /*\n        let dialogRef = this.dialog.open(MessageDialogComponent, {\n        //    height: '400px',\n        //    width: '600px',\n            data: {\n                messages: this.messages\n            }\n        });\n        */\n        this.modalService.open(content).result.then((result) => {\n            // this.closeResult = `Closed with: ${result}`;\n        }, (reason) => {\n            // this.closeResult = `Dismissed ${this.getDismissReason(reason)}`;\n        });\n    }\n\n    ngOnInit() {\n        this.subscription = this.messageService\n            .getMessages()\n            .subscribe(messages => this.receiveMessages(messages))\n        ;\n\n    }\n\n    receiveMessages(messages: Message[]) {\n        console.log('message component receiveMessage');\n        console.log(this.messages.length);\n        this.messages = messages;\n        let messageType = messages.reduce(function(prevType, message) {\n            if(message.type === Message.MESSAGE_TYPE_ERROR || prevType === Message.MESSAGE_TYPE_ERROR) {\n                return Message.MESSAGE_TYPE_ERROR;\n            } else if(message.type === Message.MESSAGE_TYPE_ALERT || prevType === Message.MESSAGE_TYPE_ALERT) {\n                return Message.MESSAGE_TYPE_ALERT;\n            } else if(message.type === Message.MESSAGE_TYPE_WARNING || prevType === Message.MESSAGE_TYPE_WARNING) {\n                return Message.MESSAGE_TYPE_WARNING;\n            } else if(message.type === Message.MESSAGE_TYPE_INFO || prevType === Message.MESSAGE_TYPE_INFO) {\n                return Message.MESSAGE_TYPE_INFO;\n            } else {\n                return Message.MESSAGE_TYPE_DEBUG;\n            }\n        }, Message.MESSAGE_TYPE_DEBUG);\n        this.messageCount = messages.filter(message => message.type === messageType).length;\n        this.messageClass = Message.messageTypesMap[messageType];\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to ensure no memory leaks\n        this.subscription.unsubscribe();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/icon/icon.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".selected {\\n  background-color: #CFD8DC !important;\\n  color: white;\\n}\\n.heroes {\\n  margin: 0 0 2em 0;\\n  list-style-type: none;\\n  padding: 0;\\n  width: 15em;\\n}\\n.heroes li {\\n  cursor: pointer;\\n  position: relative;\\n  left: 0;\\n  background-color: #EEE;\\n  margin: .5em;\\n  padding: .3em 0;\\n  height: 1.6em;\\n  border-radius: 4px;\\n}\\n.heroes li:hover {\\n  color: #607D8B;\\n  background-color: #DDD;\\n  left: .1em;\\n}\\n.heroes li.selected:hover {\\n  background-color: #BBD8DC !important;\\n  color: white;\\n}\\n.heroes .text {\\n  position: relative;\\n  top: -3px;\\n}\\n.heroes .badge {\\n  display: inline-block;\\n  font-size: small;\\n  color: white;\\n  padding: 0.8em 0.7em 0 0.7em;\\n  background-color: #607D8B;\\n  line-height: 1em;\\n  position: relative;\\n  left: -1px;\\n  top: -4px;\\n  height: 1.8em;\\n  margin-right: .8em;\\n  border-radius: 4px 0 0 4px;\\n}\\nbutton {\\n  font-family: Arial;\\n  background-color: #eee;\\n  border: none;\\n  padding: 5px 10px;\\n  border-radius: 4px;\\n  cursor: pointer;\\n  cursor: hand;\\n}\\nbutton:hover {\\n  background-color: #cfd8dc;\\n}\\n\\nbutton.delete {\\n  float:right;\\n  margin-top: 2px;\\n  margin-right: .8em;\\n  background-color: gray !important;\\n  color:white;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/list/list.component.css\n// module id = ../../../../../src/app/home/message/list/list.component.css\n// module chunks = main","module.exports = \"<!--h1>\\n  {{title}}\\n</h1-->\\n\\n<h2>Messages</h2>\\n<ul class=\\\"mssages\\\" *ngIf=\\\"messageService.messages\\\">\\n    <li *ngFor=\\\"let message of messageService.messages\\\">\\n        <span class=\\\"badge\\\">{{message.id}}</span>\\n        <a routerLink=\\\"/message/{{message.id}}\\\">{{message.title}}</a>\\n        <button class=\\\"delete\\\" (click)=\\\"delete(message); $event.stopPropagation()\\\">x</button>\\n        <div>{{message.text}}</div>\\n    </li>\\n</ul>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/list/list.component.html\n// module id = ../../../../../src/app/home/message/list/list.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { Message } from '../../../models/message';\nimport { MessageService } from '../../../services/message.service';\nimport { TitleService } from '../../../services/title.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-heroes-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\n\nexport class MessageListComponent implements OnInit {\n    constructor(\n        private router: Router,\n        public messageService: MessageService,\n        private titleService: TitleService\n    ) {}\n\n    ngOnInit(): void {\n        this.titleService.setTitle('List of Messages');\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/list/list.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/message.component.css\n// module id = ../../../../../src/app/home/message/message.component.css\n// module chunks = main","module.exports = \"<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/message.component.html\n// module id = ../../../../../src/app/home/message/message.component.html\n// module chunks = main","import { Component } from '@angular/core';\nimport { OnInit } from '@angular/core';\nimport { TitleService } from '../../services/title.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-message',\n  templateUrl: './message.component.html',\n  styleUrls: ['./message.component.css']\n})\n\nexport class MessageComponent {}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/home/message/message.component.ts","export class Hero {\n  id: string;\n  name: string;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/models/hero.ts","\nexport class Message {\n    static MESSAGE_TYPE_INFO = 1;\n    static MESSAGE_TYPE_WARNING = 2;\n    static MESSAGE_TYPE_ERROR = 3;\n    static MESSAGE_TYPE_ALERT = 4;\n    static MESSAGE_TYPE_DEBUG = 10;\n\n    static messageTypesMap: { [key: number]: string; } = {\n        [Message.MESSAGE_TYPE_ERROR]: 'error',\n        [Message.MESSAGE_TYPE_ALERT]: 'alert',\n        [Message.MESSAGE_TYPE_WARNING]: 'warning',\n        [Message.MESSAGE_TYPE_INFO]: '',\n        [Message.MESSAGE_TYPE_DEBUG]: '',\n    };\n\n    id?: number;\n    type: number;\n    title: string;\n    text: string;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/models/message.ts","import { Error } from '../models/error';\n\nexport const ERRORS: Error[] = [\n  {code: 404, message: 'Page not found', description: 'You either click an old link or type a wrong address'},\n];\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/models/mock-errors.ts","export class Login {\n  email: string;\n  password: string;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/models/login.ts","export class Signup {\n    email: string;\n    fname?: string;\n    mname?: string;\n    lname?: string;\n    bdate?: string;\n    password?: string;\n    password1?: string;\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/models/signup.ts","export class User {\n    id: string;\n    email: string;\n    status_id: number;\n    type_id: number;\n    fname: string;\n    mname: string;\n    lname: string;\n    bdate: string;\n\n    getName(): string {\n        let names = [];\n        if(this.fname) names.push(this.fname);\n        if(this.mname) names.push(this.mname);\n        if(this.lname) names.push(this.lname);\n\n        let nameStr: string = names.join(\" \")\n\n        return nameStr ? nameStr : this.email;\n    }\n\n    import(dat: any): User {\n        if(typeof dat == \"string\") {\n            dat = JSON.parse(dat);\n        }\n\n        if(dat['id']) this.id = dat['id'];\n        if(dat['email']) this.email = dat['email'];\n        if(dat['status_id']) this.status_id = dat['status_id'];\n        if(dat['type_id']) this.type_id = dat['type_id'];\n        if(dat['fname']) this.fname = dat['fname'];\n        if(dat['mname']) this.mname = dat['mname'];\n        if(dat['lname']) this.lname = dat['lname'];\n        if(dat['bdate']) this.bdate = dat['bdate'];\n\n        return this;\n    }\n\n    export() {\n        return JSON.stringify({\n            id: this.id,\n            email: this.email,\n            status_id: this.status_id,\n            type_id: this.type_id,\n            fname: this.fname,\n            mname: this.mname,\n            lname: this.lname,\n            bdate: this.bdate\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/models/user.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/profile/profile.component.css\n// module id = ../../../../../src/app/modules/user/profile/profile.component.css\n// module chunks = main","module.exports = \"<h2 i18n>Profile</h2>\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/profile/profile.component.html\n// module id = ../../../../../src/app/modules/user/profile/profile.component.html\n// module chunks = main","import { Component, Input, OnInit, OnDestroy, ViewChild, AfterViewInit } from '@angular/core';\n//import { MdDialog, MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\n//import {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\nimport { Router }      from '@angular/router';\nimport { ActivatedRoute, Params }   from '@angular/router';\n//import { AuthService } from '../../../services/auth.service';\n//import { TitleService } from '../../../services/title.service';\n//import { MessageService } from '../../../services/message.service';\n\nimport { UserComponent } from '../user.component';\n\n@Component({\n    selector: 'app-user-profile',\n    templateUrl: './profile.component.html',\n    styleUrls: ['./profile.component.css']\n})\nexport class UserProfileComponent extends UserComponent {\n    isRequesting: boolean = false;\n\n    ngOnInit(): void {\n        this.titleService.setTitle('Profile');\n    }\n\n    ngOnDestroy(): void {\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/profile/profile.component.ts","import { Injectable }       from '@angular/core';\nimport {\n  CanActivate, Router,\n  ActivatedRouteSnapshot,\n  RouterStateSnapshot\n}                           from '@angular/router';\nimport { AuthService }      from './auth.service';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n    constructor(private authService: AuthService, private router: Router) {}\n\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n        let url: string = state.url;\n\n        return this.checkLogin(url);\n    }\n\n    checkLogin(url: string): boolean {\n        if (this.authService.isLoggedIn) { return true; }\n\n        // Store the attempted URL for redirecting\n        this.authService.redirectUrl = url;\n\n        // Navigate to the login page with extras\n        this.router.navigate(['/user/signin']);\n        return false;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/services/auth-guard.service.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\nimport { Login } from '../../../models/login';\nimport { User }  from '../models/user';\nimport { Reply } from '../../../models/reply';\nimport { Signup } from '../models/signup';\nimport { Message } from '../../../models/message';\nimport { MessageService } from '../../../services/message.service';\nimport { Config } from '../../../config';\n\n@Injectable()\nexport class AuthService {\n    isLoggedIn: boolean = false;\n    user: User;\n    private prefixUrl = Config.REST_LOGIN;  // URL to web API\n    constructor (\n        private http: Http,\n        private messageService: MessageService\n    ) {}\n\n    // store the URL so we can redirect after logging in\n    redirectUrl: string;\n\n    check(): Observable<boolean> {\n        const url = `${this.prefixUrl}/check`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .post(url, {}, {headers: headers})\n            .map((result:Response) => this.extractData(result))\n            .catch((error) => this.handleError(error));\n    }\n\n    signup(signup: Signup): Observable<Reply> {\n//        return Observable.of(true).delay(1000).do(val => this.isLoggedIn = true);\n        const url = `${this.prefixUrl}/signup`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .post(url, JSON.stringify(signup), {headers: headers})\n            .map((result:Response) => {\n                let reply: Reply = result.json();\n                return reply;\n            })\n            .catch((error) => this.handleError(error));\n    }\n\n    login(login: Login): Observable<boolean> {\n//        return Observable.of(true).delay(1000).do(val => this.isLoggedIn = true);\n        const url = `${this.prefixUrl}/login`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .post(url, JSON.stringify(login), {headers: headers})\n            .map((result:Response) => this.extractData(result))\n            .catch((error) => this.handleError(error));\n    }\n\n    logout(): Observable<boolean> {\n        const url = `${this.prefixUrl}/logout`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .post(url, {}, {headers: headers})\n            .map((result:Response) => this.extractData(result))\n            .catch((error) => this.handleError(error));\n    }\n\n    private extractData(res: Response) {\n        let body = res.json();\n\n        if(body['logged'] == 'in') {\n            this.isLoggedIn = true;\n        } else if(body['logged'] == 'out'){\n            this.isLoggedIn = false;\n        }\n\n        if(body['user']) {\n            this.user = (new User).import(body['user']);\n        }\n\n        if(body['result'] == 'success') {\n            return ; //body[field];\n        }\n\n        return body || null;\n    }\n\n    private handleError (error: Response | any) {\n        // In a real world app, you might use a remote logging infrastructure\n        let errMsg: string;\n        if (error instanceof Response) {\n            let err: string;\n            try {\n                let body = error.json();\n                err = body.error || JSON.stringify(body);\n            } catch(e) {\n                err = '';\n            }\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n\n        this.messageService.sendMessage({\n            type: Message.MESSAGE_TYPE_ERROR,\n            title: 'Server connection error',\n            text: errMsg,\n        });\n\n        return Observable.throw(errMsg);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/services/auth.service.ts","import { Injectable } from '@angular/core';\n//import { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport {StompService, StompState} from '@stomp/ng2-stompjs';\nimport {Message} from '@stomp/stompjs';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\n\nimport { Login } from '../../../models/login';\nimport { User }  from '../models/user';\nimport { Jwt }  from '../models/jwt';\nimport { Reply } from '../../../models/reply';\nimport { Signup } from '../models/signup';\n//import { Message } from '../../../models/message';\n//import { MessageService } from '../../../services/message.service';\nimport { Config } from '../../../config';\n\n@Injectable()\nexport class WsService {\n    isLoggedIn: boolean = false;\n    public token: string;\n    user: User;\n    jwt: Jwt;\n    subscription: any;\n\n    constructor (\n        private stompService: StompService\n//        private messageService: MessageService\n    ) {\n//        this.user = (new User).import(localStorage.getItem('user'));\n//        this.jwt = JSON.parse(localStorage.getItem('jwt'));\n        this.token = this.jwt && this.jwt.token;\n        this.subscription = this.stompService.subscribe('/auth/states').map((message: Message) => {\n            return message.body;\n        }).subscribe((msg_body: string) => {\n            console.log(`Received: ${msg_body}`);\n        });\n    }\n\n    // store the URL so we can redirect after logging in\n    redirectUrl: string;\n\n    check(): Observable<boolean> {\n        this.stompService.publish('/auth/signin', 'My important message');\n        return this.subscription;\n    }\n\n/*\n    signup(signup: Signup): Observable<Reply> {\n\n        const url = `${this.prefixUrl}/signup`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .post(url, JSON.stringify(signup), {headers: headers})\n            .map((result:Response) => {\n                let reply: Reply = result.json();\n                return reply;\n            })\n            .catch((error) => this.handleError(error));\n    }\n\n    login(login: Login): Observable<boolean> {\n//        return Observable.of(true).delay(1000).do(val => this.isLoggedIn = true);\n        const url = `${this.prefixUrl}/login`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .post(url, JSON.stringify(login), {headers: headers})\n            .map((result:Response) => this.extractData(result))\n            .catch((error) => this.handleError(error));\n    }\n\n    logout(): Observable<boolean> {\n        const url = `${this.prefixUrl}/logout`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .post(url, {}, {headers: headers})\n            .map((result:Response) => this.extractData(result))\n            .catch((error) => this.handleError(error));\n    }\n\n    private extractData(res: Response) {\n        let body = res.json();\n\n        if(body['logged'] == 'in') {\n            this.isLoggedIn = true;\n        } else if(body['logged'] == 'out'){\n            this.isLoggedIn = false;\n        }\n\n        if(body['user']) {\n            this.user = (new User).import(body['user']);\n        }\n\n        if(body['result'] == 'success') {\n            return ; //body[field];\n        }\n\n        return body || null;\n    }\n\n    private handleError (error: Response | any) {\n        // In a real world app, you might use a remote logging infrastructure\n        let errMsg: string;\n        if (error instanceof Response) {\n            let err: string;\n            try {\n                let body = error.json();\n                err = body.error || JSON.stringify(body);\n            } catch(e) {\n                err = '';\n            }\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n\n        this.messageService.sendMessage({\n            type: Message.MESSAGE_TYPE_ERROR,\n            title: 'Server connection error',\n            text: errMsg,\n        });\n\n        return Observable.throw(errMsg);\n    }\n*/\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/services/ws.service.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card-container.card {\\n    max-width: 350px;\\n    padding: 40px 40px;\\n}\\n\\n/*\\n * Card component\\n */\\n.card {\\n    background-color: #F7F7F7;\\n    /* just in case there no content*/\\n    padding: 20px 25px 30px;\\n    margin: 0 auto 25px;\\n    margin-top: 50px;\\n    /* shadows and rounded borders */\\n    border-radius: 2px;\\n    box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.3);\\n}\\n\\n.profile-img-card {\\n    width: 96px;\\n    height: 96px;\\n    margin: 0 auto 10px;\\n    display: block;\\n    border-radius: 50%;\\n}\\n\\n.btn.btn-signin {\\n    /*background-color: #4d90fe; */\\n    background-color: rgb(104, 145, 162);\\n    /* background-color: linear-gradient(rgb(104, 145, 162), rgb(12, 97, 33));*/\\n    padding: 0px;\\n    font-weight: 700;\\n    font-size: 14px;\\n    height: 36px;\\n    border-radius: 3px;\\n    border: none;\\n    transition: all 0.218s;\\n}\\n\\n.btn.btn-signin:hover,\\n.btn.btn-signin:active,\\n.btn.btn-signin:focus {\\n    background-color: rgb(12, 97, 33);\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signin/signin.component.css\n// module id = ../../../../../src/app/modules/user/signin/signin.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card card-container\\\">\\n\\n    <img id=\\\"profile-img\\\"\\n        class=\\\"profile-img-card\\\"\\n        src=\\\"assets/img/profile.png\\\"\\n    />\\n    <p i18n=\\\"@@signin-request-message\\\" *ngIf=\\\"isRequesting\\\">Trying to sign in</p>\\n\\n<form (ngSubmit)=\\\"login()\\\" #loginForm=\\\"ngForm\\\">\\n    <div class=\\\"form-group row\\\">\\n      <!--label for=\\\"loginemail\\\" class=\\\"col-2 col-form-label\\\" i18n>E-mail</label-->\\n      <div class=\\\"col\\\">\\n        <input\\n            class=\\\"form-control\\\"\\n            type=\\\"email\\\"\\n            i18n-placeholder\\n            placeholder=\\\"E-mail\\\"\\n            [(ngModel)]=\\\"loginDat.email\\\"\\n            name=\\\"email\\\"\\n            #loginlogin=\\\"ngModel\\\"\\n            required\\n            pattern=\\\"^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@]+)*))@((([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$\\\"\\n        >\\n        <small *ngIf=\\\"loginlogin.errors && (loginlogin.dirty || loginlogin.touched)\\\" class=\\\"form-text text-muted alert alert-danger\\\">\\n            <div [hidden]=\\\"!loginlogin.errors.required\\\" i18n=\\\"@@email-valid-empty\\\">E-mail cannot be empty</div>\\n            <div [hidden]=\\\"!loginlogin.errors.pattern\\\" i18n=\\\"@@email-valid-pattern\\\">E-mail must look like your_name@example.com</div>\\n        </small>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <!--label for=\\\"loginpassword\\\" class=\\\"col-2 col-form-label\\\" i18n>Password</label-->\\n      <div class=\\\"col\\\">\\n        <input\\n            class=\\\"form-control\\\"\\n            type=\\\"password\\\"\\n            i18n-placeholder\\n            placeholder=\\\"Password\\\"\\n            [(ngModel)]=\\\"loginDat.password\\\"\\n            name=\\\"password\\\"\\n            #loginpassword=\\\"ngModel\\\"\\n            required\\n            pattern=\\\"^(?=.*[a-zа-я])(?=.*[A-ZА-Я])(?=.*\\\\d).{6,}$\\\"\\n        >\\n        <small *ngIf=\\\"loginpassword.errors && (loginpassword.dirty || loginpassword.touched)\\\" class=\\\"form-text text-muted alert alert-danger\\\">\\n            <div [hidden]=\\\"!loginpassword.errors.required\\\" i18n=\\\"@@password-valid-empty\\\">You must type in password</div>\\n            <div [hidden]=\\\"!loginpassword.errors.pattern\\\" i18n=\\\"@@password-valid-pattern\\\">Password must contain both capital and lowercase letters as well as digits with the size no less then 6 symbols</div>\\n        </small>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-lg btn-primary btn-block btn-signin\\\" [disabled]=\\\"!loginForm.form.valid\\\" i18n>Sign in</button>\\n</form>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signin/signin.component.html\n// module id = ../../../../../src/app/modules/user/signin/signin.component.html\n// module chunks = main","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n//import { MdDialog, MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\n//import {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\nimport { Login }       from '../models/login';\n/*\nimport { Router }      from '@angular/router';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { Signup }      from '../models/signup';\nimport { TitleService } from '../../../services/title.service';\nimport { MessageService } from '../../../services/message.service';\nimport { Subscription } from 'rxjs/Subscription';\n*/\n\nimport { UserComponent } from '../user.component';\n\n@Component({\n    selector: 'app-user-signin',\n    templateUrl: './signin.component.html',\n    styleUrls: ['./signin.component.css']\n})\nexport class UserSigninComponent extends UserComponent {\n    @Input() loginDat: Login = {email: \"\", password: \"\"};\n    isRequesting: boolean = false;\n\n    emailRegex: String = \"^(([^<>()\\[\\]\\\\.,;:\\s@]+(\\.[^<>()\\[\\]\\\\.,;:\\s@]+)*))@((([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$\";\n\n    //emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    ngOnInit(): void {\n        this.titleService.setTitle('Sign in');\n    }\n\n    ngAfterViewInit(): void {\n    }\n\n    ngOnDestroy(): void {\n//        this.routeSub.unsubscribe();\n    }\n\n    login() {\n        this.isRequesting = true;\n        this.authService.login(this.loginDat).subscribe(() => {\n            this.isRequesting = false;\n            if (this.authService.isLoggedIn) {\n                let redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/';\n                this.router.navigate([redirect]);\n            }\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signin/signin.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input {\\n    width: 100%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signout/signout.component.css\n// module id = ../../../../../src/app/modules/user/signout/signout.component.css\n// module chunks = main","module.exports = \"<h2 i18n=\\\"@@signout-farewell\\\">We are looking forward you back!</h2>\\n\\n<p i18n=\\\"@@signout-request-message\\\" *ngIf=\\\"isRequesting\\\">Trying to sign out</p>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signout/signout.component.html\n// module id = ../../../../../src/app/modules/user/signout/signout.component.html\n// module chunks = main","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n//import { MdDialog, MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\n//import {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\nimport { Router }      from '@angular/router';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { Signup }      from '../models/signup';\nimport { Login }       from '../models/login';\nimport { TitleService } from '../../../services/title.service';\nimport { MessageService } from '../../../services/message.service';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { UserComponent } from '../user.component';\n\n@Component({\n    selector: 'app-user-signout',\n    templateUrl: './signout.component.html',\n    styleUrls: ['./signout.component.css']\n})\nexport class UserSignoutComponent extends UserComponent {\n    isRequesting: boolean = false;\n\n    ngOnInit(): void {\n        this.titleService.setTitle('Sign out');\n        this.signout();\n    }\n\n    ngOnDestroy(): void {\n    }\n\n    signout() {\n        this.isRequesting = true;\n        this.authService.logout().subscribe(() => {\n            this.isRequesting = false;\n            if (! this.authService.isLoggedIn) {\n                this.router.navigate(['/']);\n            }\n        });\n    }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signout/signout.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"input {\\n    width: 100%;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signup/signup.component.css\n// module id = ../../../../../src/app/modules/user/signup/signup.component.css\n// module chunks = main","module.exports = \"<div class=\\\"card card-container\\\">\\n<p i18n=\\\"@@signup-request-message\\\" *ngIf=\\\"isRequesting\\\">Trying to sign up</p>\\n\\n<div class=\\\"signup-success\\\" *ngIf=\\\"isRegistered\\\">\\n    <div i18n=\\\"@@signup-success-message\\\">\\n\\n    <p>Congratulations! You have been successfully signed up at the CrowdProj portal.</p>\\n\\n    <p>Please check your email: <b>{{signupDat.email}}</b> for further\\n    instructions. You should confirm your email address within 24 hours.\\n    After that your profile will be available for use.</p>\\n\\n    </div>\\n\\n    <button class=\\\"btn btn-success\\\" i18n=\\\"@@got-it\\\" (click)=\\\"gotIt()\\\">Got it!</button>\\n</div>\\n\\n<form (ngSubmit)=\\\"signup()\\\" #signupForm=\\\"ngForm\\\" *ngIf=\\\"!isRegistered\\\">\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"signupemail\\\" class=\\\"col-2 col-form-label\\\" i18n>E-mail</label>\\n      <div class=\\\"col-10\\\">\\n        <input\\n            class=\\\"form-control\\\"\\n            type=\\\"email\\\"\\n            i18n-placeholder\\n            placeholder=\\\"E-mail\\\"\\n            [(ngModel)]=\\\"signupDat.email\\\"\\n            name=\\\"email\\\"\\n            #signupEmail=\\\"ngModel\\\"\\n            required\\n            pattern=\\\"^(([^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@]+(\\\\.[^<>()\\\\[\\\\]\\\\\\\\.,;:\\\\s@]+)*))@((([a-zA-Z\\\\-0-9]+\\\\.)+[a-zA-Z]{2,}))$\\\"\\n        >\\n        <small *ngIf=\\\"signupEmail.errors && (signupEmail.dirty || signupEmail.touched)\\\" class=\\\"form-text text-muted alert alert-danger\\\">\\n            <div [hidden]=\\\"!signupEmail.errors.required\\\" i18n=\\\"@@email-valid-empty\\\">E-mail cannot be empty</div>\\n            <div [hidden]=\\\"!signupEmail.errors.pattern\\\" i18n=\\\"@@email-valid-pattern\\\">E-mail must look like your_name@example.com</div>\\n        </small>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"signupFname\\\" class=\\\"col-2 col-form-label\\\" i18n=\\\"@@first-name\\\">First Name</label>\\n      <div class=\\\"col-10\\\">\\n        <input\\n            class=\\\"form-control\\\"\\n            type=\\\"text\\\"\\n            i18n-placeholder=\\\"@@first-name\\\"\\n            placeholder=\\\"First Name\\\"\\n            [(ngModel)]=\\\"signupDat.fname\\\"\\n            name=\\\"fname\\\"\\n            #signupFname=\\\"ngModel\\\"\\n            required\\n            pattern=\\\"^\\\\w+$\\\"\\n        >\\n        <small *ngIf=\\\"signupFname.errors && (signupFname.dirty || signupFname.touched)\\\" class=\\\"form-text text-muted alert alert-danger\\\">\\n            <div [hidden]=\\\"!signupFname.errors.required\\\" i18n=\\\"@@fname-valid-empty\\\">Fill in your first name</div>\\n            <div [hidden]=\\\"!signupFname.errors.pattern\\\" i18n=\\\"@@fname-valid-pattern\\\">Name must contain only letters</div>\\n        </small>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"signupMname\\\" class=\\\"col-2 col-form-label\\\" i18n=\\\"@@middle-name\\\">Middle Name</label>\\n      <div class=\\\"col-10\\\">\\n        <input\\n            class=\\\"form-control\\\"\\n            type=\\\"text\\\"\\n            i18n-placeholder=\\\"@@middle-name\\\"\\n            placeholder=\\\"Отчество\\\"\\n            [(ngModel)]=\\\"signupDat.mname\\\"\\n            name=\\\"mname\\\"\\n            #signupMname=\\\"ngModel\\\"\\n            pattern=\\\"^\\\\w+$\\\"\\n        >\\n        <small *ngIf=\\\"signupMname.errors && (signupMname.dirty || signupMname.touched)\\\" class=\\\"form-text text-muted alert alert-danger\\\">\\n            <div [hidden]=\\\"!signupMname.errors.pattern\\\" i18n=\\\"@@mname-valid-pattern\\\">Middle name must contain only letters</div>\\n        </small>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"signupLname\\\" class=\\\"col-2 col-form-label\\\" i18n=\\\"@@last-name\\\">Last Name</label>\\n      <div class=\\\"col-10\\\">\\n        <input\\n            class=\\\"form-control\\\"\\n            type=\\\"text\\\"\\n            i18n-placeholder=\\\"@@last-name\\\"\\n            placeholder=\\\"Last Name\\\"\\n            [(ngModel)]=\\\"signupDat.lname\\\"\\n            name=\\\"lname\\\"\\n            #signupLname=\\\"ngModel\\\"\\n            required\\n            pattern=\\\"^\\\\w+$\\\"\\n        >\\n\\n        <small *ngIf=\\\"signupLname.errors && (signupLname.dirty || signupLname.touched)\\\" class=\\\"form-text text-muted alert alert-danger\\\">\\n            <div [hidden]=\\\"!signupLname.errors.required\\\" i18n=\\\"@@mname-valid-empty\\\">Fill in your family name</div>\\n            <div [hidden]=\\\"!signupLname.errors.pattern\\\" i18n=\\\"@@mname-valid-pattern\\\">Last name must contain only letters</div>\\n        </small>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"signupPassword\\\" class=\\\"col-2 col-form-label\\\" i18n>Password</label>\\n      <div class=\\\"col-10\\\">\\n        <input\\n            class=\\\"form-control\\\"\\n            type=\\\"password\\\"\\n            i18n-placeholder\\n            placeholder=\\\"Password\\\"\\n            [(ngModel)]=\\\"signupDat.password\\\"\\n            name=\\\"password\\\"\\n            #signupPassword=\\\"ngModel\\\"\\n            required\\n            pattern=\\\"^(?=.*[a-zа-я])(?=.*[A-ZА-Я])(?=.*\\\\d).{6,}$\\\"\\n        >\\n        <small *ngIf=\\\"signupPassword.errors && (signupPassword.dirty || signupPassword.touched)\\\" class=\\\"form-text text-muted alert alert-danger\\\">\\n            <div [hidden]=\\\"!signupPassword.errors.required\\\" i18n=\\\"@@password-valid-empty\\\">You must type in password</div>\\n            <div [hidden]=\\\"!signupPassword.errors.pattern\\\" i18n=\\\"@@password-valid-pattern\\\">Password must contain both capital and lowercase letters as well as digits with the size no less then 6 symbols</div>\\n        </small>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group row\\\">\\n      <label for=\\\"signupPassword1\\\" class=\\\"col-2 col-form-label\\\" i18n=\\\"@@password-repeat\\\">Verify Password</label>\\n      <div class=\\\"col-10\\\">\\n        <input\\n            class=\\\"form-control\\\"\\n            type=\\\"password\\\"\\n            i18n-placeholder=\\\"@@password-repeat\\\"\\n            placeholder=\\\"Verify Password\\\"\\n            [(ngModel)]=\\\"signupDat.password1\\\"\\n            name=\\\"password1\\\"\\n            #signupPassword1=\\\"ngModel\\\"\\n            required\\n            pattern=\\\"^(?=.*[a-zа-я])(?=.*[A-ZА-Я])(?=.*\\\\d).{6,}$\\\"\\n        >\\n\\n        <small *ngIf=\\\"signupPassword1.errors && (signupPassword1.dirty || signupPassword1.touched)\\\" class=\\\"form-text text-muted alert alert-danger\\\">\\n            <div [hidden]=\\\"!signupPassword1.errors.required\\\" i18n=\\\"@@password1-valid-empty\\\">Type password once again</div>\\n            <div [hidden]=\\\"!signupPassword1.errors.pattern\\\" i18n=\\\"@@password-valid-pattern\\\">Password must contain both capital and lowercase letters as well as digits with the size no less then 6 symbols</div>\\n            <div [hidden]=\\\"!signupPassword1.errors.pattern\\\" i18n=\\\"@@password1-valid-differs\\\">Passwords differ</div>\\n        </small>\\n      </div>\\n    </div>\\n    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"!signupForm.form.valid\\\" i18n>Sign up</button>\\n</form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signup/signup.component.html\n// module id = ../../../../../src/app/modules/user/signup/signup.component.html\n// module chunks = main","import { Component, Input, OnInit, OnDestroy } from '@angular/core';\n//import { MdDialog, MdDialogRef, MD_DIALOG_DATA } from '@angular/material';\n//import {NgbModal, ModalDismissReasons} from '@ng-bootstrap/ng-bootstrap';\n\nimport { Router }      from '@angular/router';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nimport { Signup }      from '../models/signup';\nimport { Login }       from '../models/login';\nimport { TitleService } from '../../../services/title.service';\nimport { MessageService } from '../../../services/message.service';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport { UserComponent } from '../user.component';\n\n@Component({\n    selector: 'app-user-signup',\n    templateUrl: './signup.component.html',\n    styleUrls: ['./signup.component.css']\n})\nexport class UserSignupComponent extends UserComponent {\n    @Input() signupDat: Signup = {email: \"\", password: \"\", password1: \"\", fname: \"\", lname: \"\", mname: \"\"};\n    isRequesting: boolean = false;\n    isRegistered: boolean = false;\n\n    ngOnInit(): void {\n        this.titleService.setTitle('Sign up');\n    }\n\n    ngOnDestroy(): void {\n    }\n\n    signup() {\n        this.isRequesting = true;\n        this.authService.signup(this.signupDat).subscribe((reply) => {\n            this.isRequesting = false;\n            if(reply.result == 'success') {\n                this.isRegistered = true;\n            }\n        });\n    }\n\n    gotIt() {\n        this.router.navigate([\"/user/signin\"]);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/signup/signup.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/user.component.css\n// module id = ../../../../../src/app/modules/user/user.component.css\n// module chunks = main","module.exports = \"<h2 i18n *ngIf=\\\"!authService.isLoggedIn\\\">Welcome to CrowdProj!</h2>\\n\\n<ul class=\\\"nav nav-tabs\\\" *ngIf=\\\"!authService.isLoggedIn\\\">\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/user/signin\\\" routerLinkActive=\\\"active\\\" i18n>Sign in</a>\\n  </li>\\n  <li class=\\\"nav-item\\\">\\n    <a class=\\\"nav-link\\\" routerLink=\\\"/user/signup\\\" routerLinkActive=\\\"active\\\" i18n>Sign up</a>\\n  </li>\\n</ul>\\n<router-outlet></router-outlet>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/user.component.html\n// module id = ../../../../../src/app/modules/user/user.component.html\n// module chunks = main","import { Component, Input, OnInit, OnDestroy, AfterViewInit } from '@angular/core';\nimport { NgbModal, ModalDismissReasons } from '@ng-bootstrap/ng-bootstrap';\nimport { Observable } from 'rxjs/Observable';\n\nimport { Router }      from '@angular/router';\nimport { ActivatedRoute, Params }   from '@angular/router';\nimport { AuthService } from './services/auth.service';\nimport { WsService } from './services/ws.service';\nimport { Signup }      from './models/signup';\nimport { Login }       from './models/login';\nimport { TitleService } from '../../services/title.service';\nimport { MessageService } from '../../services/message.service';\nimport { Subscription } from 'rxjs/Subscription';\n\nimport {StompService, StompState} from '@stomp/ng2-stompjs';\n\n@Component({\n    selector: 'app-user',\n    templateUrl: './user.component.html',\n    styleUrls: ['./user.component.css']\n})\n\nexport class UserComponent {\n\n    public state: Observable<string>;\n\n    @Input() loginDat: Login = {email: \"\", password: \"\"};\n    @Input() signupDat: Signup = {email: \"\", password: \"\", password1: \"\", fname: \"\", lname: \"\", mname: \"\"};\n    message: string;\n    routeSub: Subscription;\n\n    emailRegex: String = \"^(([^<>()\\[\\]\\\\.,;:\\s@]+(\\.[^<>()\\[\\]\\\\.,;:\\s@]+)*))@((([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$\";\n\n    //emailRegex = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n    constructor(\n        public authService: AuthService,\n        public wsService: WsService,\n        protected titleService: TitleService,\n        protected messageService: MessageService,\n        protected route: ActivatedRoute,\n        public router: Router\n    ) {}\n\n    ngOnInit(): void {\n//        this.titleService.setTitle('Login');\n//        this.state = this.stompService.state\n//            .map((state: number) => StompState[state]);\n        this.wsService.check();\n    }\n\n    ngAfterViewInit(): void {\n//        this.routeSub = this.route.params\n//            .subscribe((params: Params) =>  this.switchTo(params['operation']));\n    }\n\n    ngOnDestroy(): void {\n//        this.routeSub.unsubscribe();\n    }\n\n    login() {\n        this.message = 'Trying to log in ...';\n        this.authService.login(this.loginDat).subscribe(() => {\n            this.message = null;\n            if (this.authService.isLoggedIn) {\n                let redirect = this.authService.redirectUrl ? this.authService.redirectUrl : '/';\n                this.router.navigate([redirect]);\n            }\n        });\n    }\n\n    logout() {\n        this.authService.logout().subscribe(() => {\n            if (! this.authService.isLoggedIn) {\n                this.router.navigate(['/']);\n            }\n        });\n    }\n\n    switchTo(subRoute: string) {\n        switch(subRoute) {\n        case \"signin\":\n            if(! this.authService.isLoggedIn) {\n                this.titleService.setTitle('Вход');\n                // this.tabGroup.selectedIndex = 0;\n                return;\n            }\n            break;\n        case \"signup\":\n            if(! this.authService.isLoggedIn) {\n                this.titleService.setTitle('Регистрация');\n                // this.tabGroup.selectedIndex = 1;\n                return;\n            }\n            break;\n        case \"signout\":\n            if(this.authService.isLoggedIn) {\n                this.logout();\n                return;\n            }\n            break;\n        case \"profile\":\n            if(this.authService.isLoggedIn) {\n                this.titleService.setTitle('Профиль');\n                return;\n            }\n            break;\n        }\n\n        if(this.authService.isLoggedIn) {\n            // use profile\n            this.router.navigate(['/user/profile']);\n            return;\n        } else {\n            // use login\n            if(! this.authService.redirectUrl && subRoute) {\n                this.authService.redirectUrl = '/user/' + subRoute;\n            }\n            this.router.navigate(['/user/signin']);\n            // this.tabGroup.selectedIndex = 0;\n        }\n    }\n\n    signup() {\n        this.authService.signup(this.signupDat).subscribe((reply) => {\n            if(reply.result == 'success') {\n                this.switchTo('signin');\n            }\n        });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/user.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n//import { BrowserModule, Title } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule, JsonpModule } from '@angular/http';\n//import { Location, LocationStrategy, PathLocationStrategy} from '@angular/common';\n//import { BrowserAnimationsModule } from '@angular/platform-browser/animations';\n\nimport { AuthGuard }            from './services/auth-guard.service';\nimport { AuthService }          from './services/auth.service';\nimport { WsService }          from './services/ws.service';\n\nimport { UserRouting }            from './user.routing';\nimport { UserComponent }          from './user.component';\nimport { UserProfileComponent }   from './profile/profile.component';\nimport { UserSigninComponent }    from './signin/signin.component';\nimport { UserSignupComponent }    from './signup/signup.component';\nimport { UserSignoutComponent }   from './signout/signout.component';\n\nimport {StompConfig, StompService} from '@stomp/ng2-stompjs';\n\nconst stompConfig: StompConfig = {\n  // Which server?\n  url: 'ws://ws.crowdproj.com/',\n\n  // Headers\n  // Typical keys: login, passcode, host\n  headers: {\n//    login: 'guest',\n//    passcode: 'guest'\n  },\n\n  // How often to heartbeat?\n  // Interval in milliseconds, set to 0 to disable\n  heartbeat_in: 0, // Typical value 0 - disabled\n  heartbeat_out: 20000, // Typical value 20000 - every 20 seconds\n\n  // Wait in milliseconds before attempting auto reconnect\n  // Set to 0 to disable\n  // Typical value 5000 (5 seconds)\n  reconnect_delay: 5000,\n\n  // Will log diagnostics on console\n  debug: true\n};\n\n@NgModule({\n    declarations: [\n        UserComponent,\n        UserProfileComponent,\n        UserSigninComponent,\n        UserSignupComponent,\n        UserSignoutComponent\n    ],\n    imports: [\n//        BrowserModule,\n//        BrowserAnimationsModule,\n        FormsModule,\n        HttpModule,\n//        JsonpModule,\n        UserRouting,\n\n        NgbModule.forRoot(),\n        CommonModule\n    ],\n    providers: [\n        AuthGuard,\n        AuthService,\n        WsService,\n        StompService,\n        {\n            provide: StompConfig,\n            useValue: stompConfig\n        }\n    ]\n})\nexport class UserModule { }\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/user.module.ts","//import { NgModule }             from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { AuthGuard }            from './services/auth-guard.service';\n//import { AuthService }          from './services/auth.service';\nimport { UserComponent }        from './user.component';\nimport { UserProfileComponent }  from './profile/profile.component';\nimport { UserSigninComponent }  from './signin/signin.component';\nimport { UserSignupComponent }  from './signup/signup.component';\nimport { UserSignoutComponent } from './signout/signout.component';\n\nconst userRoutes: Routes = [\n    {\n        path: 'user',\n        component: UserComponent,\n        data: {breadcrumb: 'User'},\n        children: [\n            {\n                path: '',\n                component: UserProfileComponent,\n                canActivate: [AuthGuard],\n                runGuardsAndResolvers: 'always',\n                data: {breadcrumb: false},\n                pathMatch: 'full'\n            },\n            {\n                path: 'signin',\n                component: UserSigninComponent,\n                data: {breadcrumb: 'Sign in'},\n                pathMatch: 'full'\n            },\n            {\n                path: 'signup',\n                component: UserSignupComponent,\n                data: {breadcrumb: 'Sign up'},\n                pathMatch: 'full'\n            },\n            {\n                path: 'signout',\n                component: UserSignoutComponent,\n                canActivate: [AuthGuard],\n                runGuardsAndResolvers: 'always',\n                data: {breadcrumb: 'Sign out'},\n                pathMatch: 'full'\n            }\n        ]\n    }\n];\n\n/*\n@NgModule({\n    imports: [\n        RouterModule.forChild(userRoutes)\n    ],\n    exports: [\n        RouterModule\n    ],\n    providers: [\n        AuthGuard,\n        AuthService\n    ]\n})\n*/\n\n//export class UserRoutingModule {}\nexport const UserRouting = RouterModule.forChild(userRoutes);\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/modules/user/user.routing.ts","import { Injectable } from '@angular/core';\nimport { Http, Response, Headers, RequestOptions } from '@angular/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/observable/throw';\nimport { Hero } from '../models/hero';\nimport { Message } from '../models/message';\nimport { MessageService } from '../services/message.service';\nimport { Config } from '../config';\n\n@Injectable()\n\nexport class HeroService {\n    private prefixUrl = Config.REST_HERO;  // URL to web API\n    constructor (\n        private http: Http,\n        private messageService: MessageService\n    ) {}\n\n    getHeroes(): Observable<Hero[]> {\n        const url = `${this.prefixUrl}/index`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .get(url)\n            .map((result:Response) => this.extractData(result, 'heroes'))\n            .catch((error) => this.handleError(error));\n    }\n\n    getHero(id: number): Observable<Hero> {\n        const url = `${this.prefixUrl}/view?id=${id}`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .get(url)\n            .map((result:Response) => this.extractData(result, 'hero'))\n            .catch((error) => this.handleError(error));\n    }\n\n    create(hero: Hero): Observable<Hero> {\n        const url = `${this.prefixUrl}/create`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .post(url, JSON.stringify(hero), {headers: headers})\n            .map((result:Response) => this.extractData(result, 'hero'))\n            .catch((error) => this.handleError(error));\n    }\n\n    update(hero: Hero): Observable<Hero> {\n        const url = `${this.prefixUrl}/update?id=${hero.id}`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .post(url, JSON.stringify(hero), {headers: headers})\n            .map((result:Response) => this.extractData(result, 'hero'))\n            .catch((error) => this.handleError(error));\n//            .catch(this.handleError);\n    }\n\n    delete(hero: Hero): Observable<boolean> {\n        const url = `${this.prefixUrl}/delete?id=${hero.id}`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .post(url, '', {headers: headers})\n            .map((result:Response) => this.extractData(result, 'result'))\n            .catch((error) => this.handleError(error));\n//            .catch(this.handleError);\n    }\n\n    search(term: string): Observable<Hero[]> {\n        const url = `${this.prefixUrl}/search?term=${term}`;\n        let headers = new Headers({ 'Content-Type': 'application/json' });\n        let options = new RequestOptions({ headers: headers });\n        return this.http\n            .get(url)\n            .map((result:Response) => this.extractData(result, 'heroes'))\n            .catch((error) => this.handleError(error));\n//            .catch(this.handleError);\n    }\n\n\n    private extractData(res: Response, field: string) {\n        let body = res.json();\n        if(body[field]) {\n            return body[field];\n        }\n        return body || null;\n    }\n\n    private handleError (error: Response | any) {\n        // In a real world app, you might use a remote logging infrastructure\n        let errMsg: string;\n        if (error instanceof Response) {\n            let err: string;\n            try {\n                let body = error.json();\n                err = body.error || JSON.stringify(body);\n            } catch(e) {\n                err = '';\n            }\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n\n        this.messageService.sendMessage({\n            type: Message.MESSAGE_TYPE_ERROR,\n            title: 'Server connection error',\n            text: errMsg,\n        });\n\n        return Observable.throw(errMsg);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/services/hero.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject }    from 'rxjs/Subject';\nimport { Message }    from '../models/message';\n\nvar messages: Message[] = [];\n\n@Injectable()\n\nexport class MessageService {\n    messageCounter: number = 0;\n    messages: Message[] = [];\n    private subject = new Subject<Message[]>();\n\n    sendMessage(message: Message) {\n        if(message != null) {\n            message.id = this.messageCounter++;\n            this.messages.push(message);\n            this.subject.next(this.messages);\n        }\n    }\n\n/*\n    clearMessage() {\n        this.subject.next();\n    }\n*/\n\n    getMessages(): Observable<Message[]> {\n        return this.subject.asObservable();\n    }\n\n    getMessage(id: number): Message {\n        let messages = this.messages.filter(message => message.id == id);\n        return messages[0];\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/services/message.service.ts","import { Injectable } from '@angular/core';\n//import { Observable } from 'rxjs/Observable';\nimport { Observable } from 'rxjs/Rx';\n//import 'rxjs/add/observable/fromEvent';\n\n@Injectable()\n\nexport class TemplateService {\n    protected obs: Observable<string>;\n\n    public constructor() {\n/*\n        this.obs = Observable.merge(\n                Observable.of(null),\n                Observable.fromEvent(window, 'resize'),\n                Observable.fromEvent(window, 'orientationchange')\n            )\n            .map((event:any) => this.detectTemplate(event));\n*/\n        this.obs = Observable.of(null)\n            .map((event:any) => this.detectTemplate(event));\n    }\n\n    getTemplate(): Observable<string> {\n        return this.obs;\n    }\n\n    detectTemplate(event: any): string {\n        return \"desktop\";\n/*\n        let w = window;\n        let d = document;\n        let e = d.documentElement;\n        let g = d.getElementsByTagName('body')[0];\n        let width = w.innerWidth || e.clientWidth || g.clientWidth;\n        let height = w.innerHeight|| e.clientHeight|| g.clientHeight;\n\n        if(width <= 480) {\n            this.template = \"mobile-portrait\";\n        } else if(height <= 480) {\n            this.template = \"mobile-landscape\";\n        } else {\n            this.template = \"desktop\";\n        }\n\n        if (window.matchMedia(\"(orientation: portrait)\").matches) {\n            this.isPortrait = true;\n        } else {\n            this.isPortrait = false;\n        }\n*/\n    }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/services/template.service.ts","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject }    from 'rxjs/Subject';\nimport { Title }      from '@angular/platform-browser';\nimport { Config }     from '../config';\n\n@Injectable()\n\nexport class TitleService {\n    private subject = new Subject<string>();\n\n    public constructor(private titleService: Title ) {}\n\n    setTitle(title: string) {\n        this.subject.next(title);\n\n        let gtitle:string;\n        if(title == null || title == '') {\n            gtitle = Config.APP_NAME;\n        } else {\n            gtitle = title + ' - ' + Config.APP_NAME;\n        }\n        this.titleService.setTitle(gtitle);\n    }\n\n    getTitle(): Observable<string> {\n        return this.subject.asObservable();\n    }\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/services/title.service.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".wrap {\\n    min-height: 100%;\\n    height: auto;\\n    margin: 0 auto -60px;\\n    padding: 0 0 60px;\\n}\\n\\n.wrap > .container {\\n    padding: 70px 15px 20px;\\n}\\n\\n.btn-breadcrumb .btn:not(:last-child):before {\\n  content: \\\" \\\";\\n  display: block;\\n  width: 0;\\n  height: 0;\\n  border-top: 17px solid transparent;\\n  border-bottom: 17px solid transparent;\\n  border-left: 10px solid rgb(173, 173, 173);\\n  position: absolute;\\n  top: 50%;\\n  margin-top: -17px;\\n  margin-left: 1px;\\n  left: 100%;\\n  z-index: 3;\\n}\\n\\n/** The Spacing **/\\n.btn-breadcrumb .btn {\\n  padding:6px 12px 6px 24px;\\n}\\n.btn-breadcrumb .btn:first-child {\\n  padding:6px 6px 6px 10px;\\n}\\n.btn-breadcrumb .btn:last-child {\\n  padding:6px 18px 6px 24px;\\n}\\n\\n/** Default button **/\\n.btn-breadcrumb .btn.btn-default:not(:last-child):after {\\n  border-left: 10px solid #fff;\\n}\\n.btn-breadcrumb .btn.btn-default:not(:last-child):before {\\n  border-left: 10px solid #ccc;\\n}\\n.btn-breadcrumb .btn.btn-default:hover:not(:last-child):after {\\n  border-left: 10px solid #ebebeb;\\n}\\n.btn-breadcrumb .btn.btn-default:hover:not(:last-child):before {\\n  border-left: 10px solid #adadad;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/templates/desktop/desktop.template.css\n// module id = ../../../../../src/app/templates/desktop/desktop.template.css\n// module chunks = main","module.exports = \"<div class=\\\"wrap\\\">\\n<nav class=\\\"navbar navbar-expand-md navbar-dark bg-dark fixed-top\\\" *ngIf=\\\"authService.isLoggedIn\\\">\\n  <a class=\\\"navbar-brand\\\" routerLink=\\\"/\\\">CrowdProj</a>\\n  <button class=\\\"navbar-toggler navbar-toggler-right\\\" type=\\\"button\\\" aria-controls=\\\"appNavigation\\\" [attr.aria-expanded]=\\\"!isCollapsed\\\" aria-label=\\\"Toggle navigation\\\" (click)=\\\"toggleMenu()\\\">\\n    <span class=\\\"navbar-toggler-icon\\\"></span>\\n  </button>\\n\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"appNavigation\\\" [ngbCollapse]=\\\"isCollapsed\\\">\\n\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/heroes\\\" routerLinkActive=\\\"active\\\" i18n-title i18n title=\\\"Tour of Heroes\\\">Heroes</a>\\n        </li>\\n    </ul>\\n    <ul class=\\\"navbar-nav ml-auto \\\">\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/user\\\" routerLinkActive=\\\"active\\\" i18n-title=\\\"@@profile-title\\\" title=\\\"All personal information\\\">{{authService.user.getName()}}</a>\\n        </li>\\n        <li class=\\\"nav-item\\\">\\n            <a class=\\\"nav-link\\\" routerLink=\\\"/user/signout\\\" routerLinkActive=\\\"active\\\" i18n-title=\\\"@@signout-title\\\" title=\\\"Close current user session\\\" i18n>Sign out</a>\\n        </li>\\n    </ul>\\n  </div>\\n</nav>\\n\\n<div class=\\\"container\\\">\\n    <div class=\\\"btn-group btn-breadcrumb\\\">\\n        <ng-template ngFor let-i=\\\"index\\\" let-breadcrumb [ngForOf]=\\\"breadcrumbs\\\">\\n        <a class=\\\"btn btn-success\\\" [class.disabled]=\\\"i == (breadcrumbs.length - 1)\\\" [routerLink]=\\\"[breadcrumb.url]\\\">{{breadcrumb.name}}</a>\\n        </ng-template>\\n    </div>\\n\\n    <router-outlet></router-outlet>\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/templates/desktop/desktop.template.html\n// module id = ../../../../../src/app/templates/desktop/desktop.template.html\n// module chunks = main","import { Component, ViewChild } from '@angular/core';\nimport { Template } from '../template';\n\n@Component({\n  selector: 'app-desktop',\n  templateUrl: './desktop.template.html',\n  styleUrls: ['./desktop.template.css']\n})\n\nexport class DesktopTemplate extends Template {\n//    @ViewChild(UserProfile) userProfile: UserProfile\n    isCollapsed = true;\n    toggleMenu() {\n        this.isCollapsed = !this.isCollapsed;\n    }\n\n    ngOnInit() {\n        document.addEventListener('click', this.offClickHandler.bind(this));\n        super.ngOnInit();\n    }\n\n    offClickHandler(event:any) {\n        if(! event.target.closest(\".navbar-toggler\") && ! this.isCollapsed) {\n            this.isCollapsed = true;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/templates/desktop/desktop.template.ts","import { Component, Inject, OnInit, OnDestroy } from '@angular/core';\nimport { Router, ActivatedRoute, ActivatedRouteSnapshot, UrlSegment} from '@angular/router';\nimport { Location } from '@angular/common';\nimport { TitleService } from '../services/title.service';\nimport { AuthService } from '../modules/user/services/auth.service';\nimport { Subscription } from 'rxjs/Subscription';\nimport { Config } from '../config';\n\nexport class Template implements OnInit, OnDestroy {\n    showBack: boolean = true;\n    isHome: boolean = true;\n    title: string = '';\n    titleSub: Subscription;\n    routerSub: Subscription;\n    breadcrumbs: {\n        name: string;\n        url: string\n    }[] = [];\n\n    public constructor(\n        @Inject(AuthService) public authService: AuthService,\n        @Inject(TitleService) protected titleService: TitleService,\n        @Inject(Router) protected router: Router,\n        @Inject(ActivatedRoute) protected activatedRoute: ActivatedRoute,\n        @Inject(Location) protected location: Location\n    ) {}\n\n    ngOnInit() {\n        this.titleSub = this.titleService.getTitle().subscribe(title => {\n            if(title == '' || title == null) {\n                this.title = Config.APP_NAME;\n            } else {\n                this.title = title;\n            }\n        });\n        this.routerSub = this.router.events.subscribe(event => {\n            this.breadcrumbs = [];\n            this.parseRoute(this.router.routerState.snapshot.root);\n        });\n    }\n\n    ngOnDestroy() {\n        // unsubscribe to ensure no memory leaks\n        this.titleSub.unsubscribe();\n        this.routerSub.unsubscribe();\n    }\n\n    parseRoute(node: ActivatedRouteSnapshot) {\n        this.showBack = node.data['noBack'] !== true;\n        if (node.data['breadcrumb']) {\n            let urlSegments: UrlSegment[] = [];\n            node.pathFromRoot.forEach(routerState => {\n                urlSegments = urlSegments.concat(routerState.url);\n            });\n            let url = urlSegments.map(urlSegment => {\n                return urlSegment.path;\n            }).join('/');\n            this.breadcrumbs.push({\n                name: node.data['breadcrumb'],\n                url: '/' + url\n            })\n        }\n        if (node.firstChild) {\n            this.parseRoute(node.firstChild);\n        }\n    }\n\n    goBack(): void {\n      this.location.back();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/app/templates/template.ts","import { TRANSLATIONS, TRANSLATIONS_FORMAT, LOCALE_ID, MissingTranslationStrategy, CompilerOptions } from '@angular/core';\nimport { CompilerConfig } from '@angular/compiler';\n\nexport const environment = {\n    production: false,\n    useOldBrowsers: true\n};\n\n// return no providers if fail to get translation file for locale\nconst noProviders: CompilerOptions[] = [];\n\nexport function getTranslationProviders(): Promise<CompilerOptions[]> {\n\n\n    // Get the locale id from the global\n    let locale: string;\n    (locale = document['locale'] as string)\n        || (locale = navigator['language'] as string)\n        || (locale = navigator['userLanguage'] as string)\n        || (locale = navigator['browserLanguage'] as string)\n        || (locale = navigator['systemLanguage'] as string)\n    ;\n\n    // No locale or U.S. English: no translation providers\n    if (!locale || locale === 'en-US') {\n        return Promise.resolve(noProviders);\n    }\n\n    return getTranslationsWithSystemJs(locale)\n        .then( (translations: string ) => {\n            return [\n            { provide: TRANSLATIONS, useValue: translations },\n            { provide: TRANSLATIONS_FORMAT, useValue: 'xlf' },\n            { provide: LOCALE_ID, useValue: locale },\n            { provide: CompilerConfig, useValue: new CompilerConfig({ missingTranslation: MissingTranslationStrategy.Error }) }\n        ];})\n        .catch(() => {\n            console.log('File not found. We have checked that');\n            return noProviders;\n        }); // ignore if file not found\n}\n\ndeclare var System: any;\n\nfunction getTranslationsWithSystemJs(locale: string) {\n    switch(locale) {\n    case 'ru':\n        return System.import('raw-loader!../i18n/messages.ru.xlf');\n    case 'de':\n        return System.import('raw-loader!../i18n/messages.de.xlf');\n    default:\n        return Promise.resolve(noProviders);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/environments/environment.ts","import { enableProdMode,  CompilerOptions } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment, getTranslationProviders } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\n// Loading i18n providers\ngetTranslationProviders().then(providers => {\n    const options: CompilerOptions[] = providers;\n    platformBrowserDynamic().bootstrapModule(AppModule, options);\n});\n\n\n\n// WEBPACK FOOTER //\n// /var/www/crowdproj/java/crowdproj/crowdproj-front/crowdproj-angular/src/main.ts"],"sourceRoot":"webpack:///"}