/**
 *
 * Copyright Â© 2017 Sergey Okatov. All rights reserved.
 * Author: Sergey Okatov
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.crowdproj.gateway.routers;

import org.springframework.web.reactive.function.server.RequestPredicates;
import org.springframework.web.reactive.function.server.RouterFunction;

import static org.springframework.http.MediaType.APPLICATION_JSON;
import static org.springframework.web.reactive.function.server.RequestPredicates.*;
import static org.springframework.web.reactive.function.server.RouterFunctions.nest;
import static org.springframework.web.reactive.function.server.RouterFunctions.route;

import com.crowdproj.gateway.handlers.ErrorHandler;
import com.crowdproj.gateway.handlers.ApiHandler;

class ApiRouter {

    private static final String API_PATH = "/api";

    static RouterFunction<?> doRoute(final ApiHandler apiHandler, final ErrorHandler errorHandler) {
        return
            nest(
                path(API_PATH),
                route(POST("/signin"), apiHandler::signin)
                    .andRoute(POST("/signup"), apiHandler::signup)
                    .andRoute(POST("/signupTest"), apiHandler::signupTest)
                    .andRoute(GET("/user/{id}"), apiHandler::getUserById)
                    .andRoute(GET("/user"), apiHandler::getUsers)
                    .andRoute(GET("/new-session"), apiHandler::getNewSession)
                    .andOther(route(RequestPredicates.all(), errorHandler::notFound))
            );
    }
}
